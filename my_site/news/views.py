from django.shortcuts import render
from django.http import HttpResponse
from .models import News

"""Create your views here.
Пропишем контроллер функции. Обычно такую функцию называют index. Все контроллеры функций должны на вход принимать 
обязательный аргумент - экземпляр класса HttpRequest, который называется request. В этом объекте хранятся данные о 
полученном запросе, о клиенте, о его браузере, куки, данные сессии, заголовки и тд."""


def index(request):
    """Мы можем даже распечатать и посмотреть, что в этом request содержится.
    print(dir(request))  # в терминале этот request выглядит как <WSGIRequest: GET '/news/'>
    Итак, мы получили какой-то запрос. И нам нужно вернуть какой-то ответ. Возвращать мы будем Http-объект с помощью
    класса HttpResponse. Его мы импортируем from django.http import HttpResponse. И будем его же возвращать.
    Вызываем конструктор данного класса и в качестве параметра даем какой-то текст.

    Вот так мы могли бы написать без использования шаблонов:
    news = News.objects.all()  # objects - это менеджер объектов
    res = '<h1>Список новостей</h1>'
    for item in news:
        res += f'<div>\n<p>{item.title}</p>\n<p>{item.content}</p>\n</div>\n<hr>\n'
    return HttpResponse(res)  # раньше здесь у нас был 'Hello world'"""

    news = News.objects.all()
    """Функция render принимает следующие параметры: 
    ● request - объект запроса
    ● название шаблона, который необходимо рендерить
    ● контекст - словарь с данными, которые необходимо передать в шаблон. В данном случае это будет News. В этом 
    словаре ключами будут выступать переменные, которые будут доступны в шаблонах. Значениями будут значения этих 
    переменных.
    """
    context = {
        'news': news,
        'title': 'Список новостей'
    }
    return render(request, template_name='news/index.html', context=context)


"""Удалим эту функцию, которая у нас была на первых уроках. Она нам уже не нужна.
    def test(request):
        Создадим еще одну функцию, которая будет возвращать строку 'Тестовая страница'. Но обернем ее уже в теги.
       return HttpResponse('<h1>Тестовая страница</h1>')
"""

Рендеринг - это процесс, когда мы берем некий файл и наполняем его данными из модели. То есть, формирование некой
страницы с данными. Джанго предлагает работать с помощью специального шаблонизатора.
- Прочитать про это в документации можно здесь https://django.fun/docs/django/ru/3.0/#the-template-layer
- Также здесь все хорошо описано https://djbook.ru/rel3.0/
Когда мы работаем с шаблонизатором, то мы работаем в нем с 3 пунктами:
© директивы (переменные) - позволяют выводить значения
© теги - управляют генерированием вывода
© фильтры - выполняют преобразование перед выводом

По умолчанию Джанго ищет шаблоны в папке templates в пакете приложения. В нашем случае пакетом приложения является
папка news. Изначально такого пакета нет, так что мы его создаем. Джанго рекомендует создать внутри только что
созданной папки templates папку с таким же названием, как и проект (news) и там уже держать шаблоны.
Шаблон - это обычный HTML-файл. Мы его создали. Теперь, чтобы подключить данный шаблон (произвести рендеринг шаблона),
мы должны импользовать специальную функцию render из раздела shortcuts.

● cd my_site
● python manage.py runserver
Далее открываем контроллер <views.py>. Раз мы новости будем получать из модели, то импортируем эту
модель <from .models import News>.

Заходим в настройки конфигурации (my_site/my_site/settings.py) и меняем язык на русский (LANGUAGE_CODE = 'ru').
Так мы видим, что вся локализация поменялась. И, обновив страницу в браузере, видим, что данные времени теперь пишутся
по-русски.
____________________________________________________________________________________________________________________
Комментарии к index.html
<!-- питоновский код прописывается так: {% логика %} в одинарных {} -->
<!-- Это тот самый title из return render(request, 'news/index.html', {'news': news, 'title': 'Список новостей'}
то есть из контроллера <views.py>). -->
<!-- значения выводятся в двойных {{}} -->
<!-- конец питоновского кода обозначается как {% endfor %} -->
<!-- Фильтр прописывается прямым слешем, например: {{item.created_at|date:"Y-m-d H:i:s"}} -->
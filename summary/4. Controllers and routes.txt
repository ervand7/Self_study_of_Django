Наш контроллер - это файл <views>.
Контроллер - это часть приложения, которая вызывается в ответ на клиентский запрос.
Контроллер обрабатывет этот запрос, формируя данные, запрашивая их у модели, и возвращает ответ в виде представления,
заполненного этими данными.
Контроллер - это связующее звено между моделями и представлениями, между данными и их отображением.

Если мы напрямую обратимся к модели (к данным), то мы получим сырые данные, без красивого их оформления.
Если напрямую обратимся к представлениям (к шаблонам), мы получим пустой шаблон без данных.
Контроллер исправляет эту ситуацию. Он получает клиентский запрос, получает данные из модели, подключает
необходимый вид, передавая туда эти самые данные. И на выходе мы получаем красиво заполненную страничку с
запрошенными данными.

Контроллеры в Джанго могут выступать в 2 вариантах:
    - контроллеры функций
    - контроллеры классов
Это значит, что в файле <views> мы можем писать либо функции, либо классы, либо комбинировать их.
Сейчас мы остановимся для начала на контроллерах функций.
___________________________________________________________________________________________________

Функцию мы написали. Но теперь нам нужно понять, как же нам запросить именно этот адрес. Ведь у нас может быть
много приложений, в которых может быть много адресов, и Джанго должен понимать, что при запросе того или иного адреса
он должен обратиться именно к данному приложению, именно к данному контроллеру функции.

Здесь на помощь приходит тот самый маршрутизатор (менеджер в мупермаркете), который принимает первичный запрос клиента
и сравнивает его со списками своих маршрутов, адресов и говорит, есть ли у него такой адрес или нет. Если есть, то он
говорит клиенту, куда ему нужно отправиться, если нет, то ошибка 404.

Список адресов находится в пакете конфигураций в модуле <urls.py>.
Для того, чтобы все заработало, мы должны в модуле <urls.py> сообщить маршрутизатору, что есть такой-то
определенный адрес. Там, кстати, уже по умолчанию есть адрес админки (admin/). И его мы можем вставить в браузерную
строку после адреса нашего сервера http://127.0.0.1:8000/. Перейдя по ссылке http://127.0.0.1:8000/admin/ мы можем
попасть в Django administration. Этот адрес нам доступен, так как он есть в списке адресов в модуле <urls.py>. Если же
прямо сейчас попытаемся ввести адрес нашего приложения http://127.0.0.1:8000/news/, то мы получим ошибку 404, так как
нашего приложения еще нет в списке адресов (маршрутизатор не знает о таком адресе).
Далее все действия и комментарии см здесь:
https://github.com/ervand7/Self_study_of_django/blob/master/my_site/news/views.py
https://github.com/ervand7/Self_study_of_django/blob/master/my_site/my_site/urls.py
https://github.com/ervand7/Self_study_of_django/blob/master/my_site/news/urls.py


